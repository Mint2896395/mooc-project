import Head from "next/head";
import Pagination from "../../../components/Pagination";
import { useRouter } from "next/router";
import { useFetch } from "usehooks-ts";
import CardNews from "components/CardNews";
import News from 'types/News';

interface Response {
  total: number;
  skip: number;
  limit: number;
  newses: News[];
};

const CoursesPage = () => {
  //parse the page and perPage  from router.query
  const router = useRouter();
  const query = router.query;
  const page = (query.page as string) ?? "1";
  const perPage = (query.perPage as string) ?? "6";

  //Define limit and skip which is used by DummyJSON API for pagination
  const limit = perPage;
  const skip = (parseInt(page) - 1) * parseInt(limit);
  const url = `/api/news?limit=${limit}&skip=${skip}&select=source.name,author,description,content`;

  //use the useFetch hook to get the products
  const { data } = useFetch<Response>(url);

    return (
        <>
        <Head>
          <title>News</title>
          <meta name="description" content="Generated by create-mooc-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="">
          <center className="box-border  ">
            <div className="relative box-border md:h-64 h-[130px] ">
              <div className="relative top-1/2 left-1/2 text-center transform -translate-x-1/2 -translate-y-1/2 ">
                  <p className="my-0 box-border whitespace-nowrap md:text-4xl text-2xl text-[#b39573] tracking-[3.2px]">
                      ข่าวสาร และบทความ
                  </p>
              </div>
            </div>
            
            <hr className="md:mt-6 box-content h-0 overflow-visible border-solid" />
          </center>
          <div className="bg-[#f5f5f5] md:pb-20">
            <div className="md:mx-auto md:px-[15px] m-0 p-0 flex flex-col justify-center items-center md:w-[88%] w-full ">
              {!data && <div>Loading...</div>}
              <div className="box-border grid lg:grid-cols-3 md:grid-cols-3 grid-cols-2 md:gap-5 gap-3 md:px-1 px-2 mx-auto md:py-20 ">
                {data?.newses?.map((news) => {
                    return (
                      <>
                        <CardNews key={news.source.id} news={news} />
                      </>
                    );
                  })
                }
              </div>

              {/* // we use tailwindCSS classes to create a decent product grid */}
              <div className="mx-auto container my-10 flex flex-col items-center">
                <Pagination
                  page={parseInt(page)}
                  perPage={parseInt(perPage)}
                  itemCount={data?.total ?? 0}
                />
                {!data && <div>Loading...</div>}
              </div>

            </div>
          </div>
        </div>
    </>
    );
}

export default CoursesPage